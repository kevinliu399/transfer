// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/filetransfer.proto

package filetransfer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	ChunkNumber   int64                  `protobuf:"varint,3,opt,name=chunk_number,json=chunkNumber,proto3" json:"chunk_number,omitempty"`
	Offset        int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Checksum      string                 `protobuf:"bytes,5,opt,name=checksum,proto3" json:"checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_proto_filetransfer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filetransfer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_proto_filetransfer_proto_rawDescGZIP(), []int{0}
}

func (x *FileChunk) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileChunk) GetChunkNumber() int64 {
	if x != nil {
		return x.ChunkNumber
	}
	return 0
}

func (x *FileChunk) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FileChunk) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type UploadStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadStatus) Reset() {
	*x = UploadStatus{}
	mi := &file_proto_filetransfer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadStatus) ProtoMessage() {}

func (x *UploadStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filetransfer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadStatus.ProtoReflect.Descriptor instead.
func (*UploadStatus) Descriptor() ([]byte, []int) {
	return file_proto_filetransfer_proto_rawDescGZIP(), []int{1}
}

func (x *UploadStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UploadStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_filetransfer_proto protoreflect.FileDescriptor

const file_proto_filetransfer_proto_rawDesc = "" +
	"\n" +
	"\x18proto/filetransfer.proto\x12\ffiletransfer\"\x92\x01\n" +
	"\tFileChunk\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12!\n" +
	"\fchunk_number\x18\x03 \x01(\x03R\vchunkNumber\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x03R\x06offset\x12\x1a\n" +
	"\bchecksum\x18\x05 \x01(\tR\bchecksum\"B\n" +
	"\fUploadStatus\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2O\n" +
	"\fFileTransfer\x12?\n" +
	"\x06Upload\x12\x17.filetransfer.FileChunk\x1a\x1a.filetransfer.UploadStatus(\x01B4Z2github.com/kevinliu399/transfer/proto;filetransferb\x06proto3"

var (
	file_proto_filetransfer_proto_rawDescOnce sync.Once
	file_proto_filetransfer_proto_rawDescData []byte
)

func file_proto_filetransfer_proto_rawDescGZIP() []byte {
	file_proto_filetransfer_proto_rawDescOnce.Do(func() {
		file_proto_filetransfer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_filetransfer_proto_rawDesc), len(file_proto_filetransfer_proto_rawDesc)))
	})
	return file_proto_filetransfer_proto_rawDescData
}

var file_proto_filetransfer_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_filetransfer_proto_goTypes = []any{
	(*FileChunk)(nil),    // 0: filetransfer.FileChunk
	(*UploadStatus)(nil), // 1: filetransfer.UploadStatus
}
var file_proto_filetransfer_proto_depIdxs = []int32{
	0, // 0: filetransfer.FileTransfer.Upload:input_type -> filetransfer.FileChunk
	1, // 1: filetransfer.FileTransfer.Upload:output_type -> filetransfer.UploadStatus
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_filetransfer_proto_init() }
func file_proto_filetransfer_proto_init() {
	if File_proto_filetransfer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_filetransfer_proto_rawDesc), len(file_proto_filetransfer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_filetransfer_proto_goTypes,
		DependencyIndexes: file_proto_filetransfer_proto_depIdxs,
		MessageInfos:      file_proto_filetransfer_proto_msgTypes,
	}.Build()
	File_proto_filetransfer_proto = out.File
	file_proto_filetransfer_proto_goTypes = nil
	file_proto_filetransfer_proto_depIdxs = nil
}
